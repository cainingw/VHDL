DEPTH=1024; 	-- Memory depth and width are required 
		-- DEPTH is the number of addresses 
WIDTH = 32; 	-- WIDTH is the number of bits of data per word
		-- DEPTH and WIDTH should be entered as decimal numbers

ADDRESS_RADIX = DEC; 	-- Address and value radixes are required
DATA_RADIX = HEX; 	-- Enter BIN, DEC, HEX, OCT, or UNS; unless
			-- otherwise specified, radixes = HEX

-- Specify values for addresses, which can be single address or range
-- SOME THINGS TO CONSIDER
-- 1) This memory is word-addressable, versus the MIPS conceptual byte-addressable memory.
--    This means that address 1 corresponds to word 1, address 2 corresponds to word 2, etc.
--    Since MIPS will be generating byte addresses, you will have to create some (very simple)
--    logic in your VHDL wrapper to deal with byte/word offsets. 
-- 2) The "single address" notation seems to be least likely to cause confusion so that is what
--    I recommend. 
-- 3) The values need to be in 32-bit hex form (i.e. don't use F when you really mean 0000000F).

CONTENT
BEGIN
 
0 : 9C0B0009;
1 : 41610010;
2 : 01616022;
3 : 80210001;
4 : 9C020000;
5 : 4182FFFB;
6 : 000218AA;
7 : 80640004;
8 : 00653020;
9 : C0C70000;
10 : 00854020;
11 : C1090000;
12 : 01275024;
13 : 80420001;
14 : 4140FFF6;
15 : C5070000;
16 : C4C90000;
17 : 04000005;

END;
